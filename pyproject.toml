[tool.poetry]

name = "brenda"
version = "0.1.0"
description = "Adding strain level annotation to BRENDA"
authors = ["Emanuel Souza de Quadros"]
license = "Mozilla Public License Version 2.0"
readme = "README.md"
packages = [
         { include = "backend" },
         { include = "entities" },
         { include = "xmlparser" },
         { include = "datamodel", from = "backend" }
         ]
include = [ "xmlparser/pubmed_article.xsl" ]

[tool.poetry.scripts]
feed = 'scripts.feed:main'
train = 'scripts.train:main'
backend_start = 'backend.run:main'
annotate = 'scripts.annotate:main'
reset_annotations = 'scripts.reset_annotations:main'

[tool.poetry.dependencies]
python = "^3.10"
beautifulsoup4 = "^4.12.3"
biopython = "^1.83"
datasets = "^2.20.0"
html5lib = "^1.1"
lxml = "^5.2.2"
pandas = "^2.2.2"
requests = "^2.32.3"
retrying = "^1.3.4"
tqdm = "^4.66.4"
xmltodict = "^0.13.0"
transformers = "^4.41.2"
scikit-learn = "^1.5.1"
numpy = "^1.26.4"
stanza = "^1.8.2"
seqeval = "^1.2.2"
s800classed.git = "https://gitlab.int.dsmz.de/ems24/s800classed.git"
s800classed.rev = "main"
jaxtyping = "^0.2.33"
pydantic = "^2.8.2"
email-validator = "^2.2.0"
sqlmodel = "^0.0.21"
fastapi = "^0.111.1"
uvicorn = "^0.30.3"
multimethod = "^1.12"

tomli-w = "^1.0.0"
watchfiles = "^0.24.0"
[tool.poetry.group.dev.dependencies]
python-lsp-server = { version = "^1.11.0" }
python-lsp-ruff = "^2.2.1"
ruff = "0.4.10"
pylsp-mypy = "^0.6.8"
python-lsp-isort = "^0.1"
pylsp-rope = "^0.1.16"
pytest = "^8.2.2"
ipython = "^8.25.0"
matplotlib = "^3.9.1"
seaborn = "^0.13.2"
statsmodels = "^0.14.2"
vermin = "^1.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80

[tool.ruff.lint]
ignore = ["F722"]

[tool.poetry.group.cpu]
optional = true

[tool.poetry.group.cpu.dependencies]
torch = { version = "^2.4.0", source = "torch_cpu", markers = "extra=='cpu' and extra!='gpu'" }

[tool.poetry.group.gpu]
optional = true

[tool.poetry.group.gpu.dependencies]
torch = { version = "^2.4.0", source = "torch_cuda", markers = "extra=='gpu' and extra!='cpu'" }
pytorch-triton = {version = "^3.0.0", source = "torch_cuda"}

[tool.poetry.extras]
cpu = ["torch"]
gpu = ["torch"]

[[tool.poetry.source]]
name = "torch_cuda"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"

[[tool.poetry.source]]
name = "torch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[[tool.mypy-seqeval]]
disable_error_code = "import_untyped"

[[tool.mypy-transformers]]
follow_imports = "silent"

[[tool.mypy-sqlmodel]]
follow_imports = "silent"
